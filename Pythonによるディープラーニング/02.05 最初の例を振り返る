{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyNiNQNKeDlAR1z0YRLUNZ/T"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["## 2.5　最初の例を振り返る"],"metadata":{"id":"VSwFS1D_B7H-"}},{"cell_type":"code","source":["import math\n","import numpy as np\n","import tensorflow as tf\n","from tensorflow import keras\n","from tensorflow.keras import layers\n","from tensorflow.keras import optimizers\n","from tensorflow.keras.datasets import mnist"],"metadata":{"id":"vTYjNClKB9Il","executionInfo":{"status":"ok","timestamp":1678865911078,"user_tz":-540,"elapsed":3690,"user":{"displayName":"zoo","userId":"06961267499399105182"}}},"execution_count":1,"outputs":[]},{"cell_type":"code","source":["(train_images, train_labels), (test_images, test_labels) = mnist.load_data()\n","train_images = train_images.reshape((60000, 28*28))\n","train_images = train_images.astype('float32') / 255\n","test_images = test_images.reshape((10000, 28*28))\n","test_images = test_images.astype('float32') / 255"],"metadata":{"id":"K4vJ-X7s-bxJ","executionInfo":{"status":"ok","timestamp":1678865911511,"user_tz":-540,"elapsed":436,"user":{"displayName":"zoo","userId":"06961267499399105182"}}},"execution_count":2,"outputs":[]},{"cell_type":"code","source":["model = keras.Sequential([\n","    layers.Dense(512, activation='relu'),\n","    layers.Dense(10, activation='softmax')\n","])"],"metadata":{"id":"xSuLvwbB-bzt","executionInfo":{"status":"ok","timestamp":1678865911511,"user_tz":-540,"elapsed":5,"user":{"displayName":"zoo","userId":"06961267499399105182"}}},"execution_count":3,"outputs":[]},{"cell_type":"code","source":["model.compile(optimizer='rmsprop',\n","              loss='sparse_categorical_crossentropy',\n","              metrics=['accuracy'])"],"metadata":{"id":"8_yQEVHIRJ1n","executionInfo":{"status":"ok","timestamp":1678865911512,"user_tz":-540,"elapsed":5,"user":{"displayName":"zoo","userId":"06961267499399105182"}}},"execution_count":4,"outputs":[]},{"cell_type":"code","source":["model.fit(train_images, train_labels, epochs=5, batch_size=128)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"8dls8wx1RapA","executionInfo":{"status":"ok","timestamp":1678865941974,"user_tz":-540,"elapsed":30467,"user":{"displayName":"zoo","userId":"06961267499399105182"}},"outputId":"7c5826da-e62c-4fbf-cf67-b70ca59d5f27"},"execution_count":5,"outputs":[{"output_type":"stream","name":"stdout","text":["Epoch 1/5\n","469/469 [==============================] - 9s 17ms/step - loss: 0.2686 - accuracy: 0.9231\n","Epoch 2/5\n","469/469 [==============================] - 8s 17ms/step - loss: 0.1078 - accuracy: 0.9687\n","Epoch 3/5\n","469/469 [==============================] - 4s 8ms/step - loss: 0.0706 - accuracy: 0.9790\n","Epoch 4/5\n","469/469 [==============================] - 5s 11ms/step - loss: 0.0513 - accuracy: 0.9841\n","Epoch 5/5\n","469/469 [==============================] - 4s 8ms/step - loss: 0.0388 - accuracy: 0.9882\n"]},{"output_type":"execute_result","data":{"text/plain":["<keras.callbacks.History at 0x7fdf67e68820>"]},"metadata":{},"execution_count":5}]},{"cell_type":"markdown","source":["### 2.5.1　最初の例を TensorFlow で一から再実装する"],"metadata":{"id":"xQntx_oiSNkL"}},{"cell_type":"markdown","source":["#### 単純な Dense クラス"],"metadata":{"id":"miQnLm1nUOh4"}},{"cell_type":"code","source":["class NaiveDense:\n","  def __init__(self, input_size, output_size, activation):\n","    self.activation = activation\n","    w_shape = (input_size, output_size)\n","    w_initial_value = tf.random.uniform(w_shape, minval=0, maxval=1e-1)\n","    self.W = tf.Variable(w_initial_value)\n","\n","    b_shape = (output_size, )\n","    b_initial_value = tf.zeros(b_shape)\n","    self.b = tf.Variable(b_initial_value)\n","\n","  def __call__(self, inputs):\n","    return self.activation(tf.matmul(inputs, self.W) + self.b)\n","\n","  @property\n","  def weights(self):\n","    return [self.W, self.b]"],"metadata":{"id":"y4Y48DNISMbg","executionInfo":{"status":"ok","timestamp":1678865941975,"user_tz":-540,"elapsed":10,"user":{"displayName":"zoo","userId":"06961267499399105182"}}},"execution_count":6,"outputs":[]},{"cell_type":"markdown","source":["#### 単純な Sequential クラス"],"metadata":{"id":"nI7CMJhiUSxd"}},{"cell_type":"code","source":["class NaiveSequential:\n","  def __init__(self, layers):\n","    self.layers = layers\n","    \n","  def __call__(self, inputs):\n","    x = inputs\n","    for layer in self.layers:\n","      x = layer(x)\n","    return x\n","\n","  @property\n","  def weights(self):\n","    weights = []\n","    for layer in self.layers:\n","      weights += layer.weights\n","    return weights"],"metadata":{"id":"ziygjIBqT4Df","executionInfo":{"status":"ok","timestamp":1678865941975,"user_tz":-540,"elapsed":8,"user":{"displayName":"zoo","userId":"06961267499399105182"}}},"execution_count":7,"outputs":[]},{"cell_type":"code","source":["model = NaiveSequential([\n","    NaiveDense(input_size=28*28, output_size=512, activation=tf.nn.relu),\n","    NaiveDense(input_size=512, output_size=10, activation=tf.nn.softmax)\n","])\n","assert len(model.weights) == 4"],"metadata":{"id":"i_bgoF1GVCKW","executionInfo":{"status":"ok","timestamp":1678865941976,"user_tz":-540,"elapsed":9,"user":{"displayName":"zoo","userId":"06961267499399105182"}}},"execution_count":8,"outputs":[]},{"cell_type":"code","source":["class BatchGenerator:\n","  def __init__(self, images, labels, batch_size=128):\n","    assert len(images) == len(labels)\n","    self.index = 0\n","    self.images = images\n","    self.labels = labels\n","    self.batch_size = batch_size\n","    self.num_batches = math.ceil(len(images) / batch_size)\n","\n","  def next(self):\n","    images = self.images[self.index: self.index+self.batch_size]\n","    labels = self.labels[self.index: self.index+self.batch_size]\n","    self.index += self.batch_size\n","    return images, labels"],"metadata":{"id":"MSqFskGKWcxJ","executionInfo":{"status":"ok","timestamp":1678865941976,"user_tz":-540,"elapsed":8,"user":{"displayName":"zoo","userId":"06961267499399105182"}}},"execution_count":9,"outputs":[]},{"cell_type":"markdown","source":["#### 2.5.2 訓練ステップを実行する"],"metadata":{"id":"fC75DphFZeiQ"}},{"cell_type":"code","source":["def one_training_step(model, images_batch, labels_batch):\n","  with tf.GradientTape() as tape:\n","    predictions = model(images_batch)\n","    per_sample_losses = tf.keras.losses.sparse_categorical_crossentropy(labels_batch, predictions)\n","    average_loss = tf.reduce_mean(per_sample_losses)\n","\n","    gradients = tape.gradient(average_loss, model.weights)\n","    update_weights(gradients, model.weights)\n","    return average_loss"],"metadata":{"id":"wPl6vslvZC08","executionInfo":{"status":"ok","timestamp":1678865941976,"user_tz":-540,"elapsed":8,"user":{"displayName":"zoo","userId":"06961267499399105182"}}},"execution_count":10,"outputs":[]},{"cell_type":"code","source":["learning_rate = 1e-3\n","\n","def update_weights(gradients, weights):\n","  for g, w in zip(gradients, weights):\n","    w.assign_sub(g * learning_rate)"],"metadata":{"id":"jPeUJC9h-c4o","executionInfo":{"status":"ok","timestamp":1678865941976,"user_tz":-540,"elapsed":7,"user":{"displayName":"zoo","userId":"06961267499399105182"}}},"execution_count":11,"outputs":[]},{"cell_type":"code","source":["optimizer = optimizers.SGD(learning_rate=1e-3)\n","\n","def update_weights(gradients, weights):\n","  optimizer.apply_gradients(zip(gradients, weights))"],"metadata":{"id":"8Bsx8Yc__APK","executionInfo":{"status":"ok","timestamp":1678865941977,"user_tz":-540,"elapsed":8,"user":{"displayName":"zoo","userId":"06961267499399105182"}}},"execution_count":12,"outputs":[]},{"cell_type":"markdown","source":["### 2.5.3 完全な訓練ループ"],"metadata":{"id":"8JYaeFgq_q3m"}},{"cell_type":"code","source":["def fit(model, images, labels, epochs, batch_size=128):\n","  for epoch_counter in range(epochs):\n","    print(f'Epoch {epoch_counter}')\n","    batch_generator = BatchGenerator(images, labels)\n","    for batch_counter in range(batch_generator.num_batches):\n","      images_batch, labels_batch = batch_generator.next()\n","      loss = one_training_step(model, images_batch, labels_batch)\n","      if batch_counter % 100 == 0:\n","        print(f'loss at batch {batch_counter}: {loss:.2f}')"],"metadata":{"id":"-iGREstd_djE","executionInfo":{"status":"ok","timestamp":1678865941977,"user_tz":-540,"elapsed":8,"user":{"displayName":"zoo","userId":"06961267499399105182"}}},"execution_count":13,"outputs":[]},{"cell_type":"code","source":["(train_images, train_labels), (test_images, test_labels) = mnist.load_data()\n","\n","train_images = train_images.reshape((60000, 28*28))\n","train_images = train_images.astype('float32') / 255\n","test_images = test_images.reshape((10000, 28*28))\n","test_images = test_images.astype('float32') / 255\n","\n","fit(model, train_images, train_labels, epochs=10, batch_size=128)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"RZmCQPywBQJL","executionInfo":{"status":"ok","timestamp":1678866025236,"user_tz":-540,"elapsed":83267,"user":{"displayName":"zoo","userId":"06961267499399105182"}},"outputId":"4b229279-c5f8-4772-ebff-c6caec8dbf66"},"execution_count":14,"outputs":[{"output_type":"stream","name":"stdout","text":["Epoch 0\n","loss at batch 0: 7.11\n","loss at batch 100: 2.24\n","loss at batch 200: 2.21\n","loss at batch 300: 2.09\n","loss at batch 400: 2.22\n","Epoch 1\n","loss at batch 0: 1.90\n","loss at batch 100: 1.90\n","loss at batch 200: 1.83\n","loss at batch 300: 1.72\n","loss at batch 400: 1.83\n","Epoch 2\n","loss at batch 0: 1.58\n","loss at batch 100: 1.60\n","loss at batch 200: 1.52\n","loss at batch 300: 1.43\n","loss at batch 400: 1.52\n","Epoch 3\n","loss at batch 0: 1.32\n","loss at batch 100: 1.37\n","loss at batch 200: 1.26\n","loss at batch 300: 1.22\n","loss at batch 400: 1.29\n","Epoch 4\n","loss at batch 0: 1.12\n","loss at batch 100: 1.19\n","loss at batch 200: 1.05\n","loss at batch 300: 1.05\n","loss at batch 400: 1.13\n","Epoch 5\n","loss at batch 0: 0.98\n","loss at batch 100: 1.05\n","loss at batch 200: 0.91\n","loss at batch 300: 0.93\n","loss at batch 400: 1.01\n","Epoch 6\n","loss at batch 0: 0.87\n","loss at batch 100: 0.94\n","loss at batch 200: 0.80\n","loss at batch 300: 0.84\n","loss at batch 400: 0.92\n","Epoch 7\n","loss at batch 0: 0.79\n","loss at batch 100: 0.85\n","loss at batch 200: 0.72\n","loss at batch 300: 0.76\n","loss at batch 400: 0.85\n","Epoch 8\n","loss at batch 0: 0.72\n","loss at batch 100: 0.78\n","loss at batch 200: 0.66\n","loss at batch 300: 0.71\n","loss at batch 400: 0.80\n","Epoch 9\n","loss at batch 0: 0.67\n","loss at batch 100: 0.72\n","loss at batch 200: 0.61\n","loss at batch 300: 0.66\n","loss at batch 400: 0.75\n"]}]},{"cell_type":"markdown","source":["### 2.5.4　モデルを評価する"],"metadata":{"id":"SzLG2kcxEZ8P"}},{"cell_type":"code","source":["predictions = model(test_images)\n","predictions = predictions.numpy()\n","predicted_labels = np.argmax(predictions, axis=1)\n","matches = predicted_labels == test_labels\n","print(f'accuracy: {matches.mean():.2f}')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"kLUZy27QD0RG","executionInfo":{"status":"ok","timestamp":1678866025236,"user_tz":-540,"elapsed":27,"user":{"displayName":"zoo","userId":"06961267499399105182"}},"outputId":"540aaa24-3074-4cbb-db77-c1e1050c10b9"},"execution_count":15,"outputs":[{"output_type":"stream","name":"stdout","text":["accuracy: 0.81\n"]}]}]}